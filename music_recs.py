import streamlit as st
from openai import OpenAI

# –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
def get_recommendations(category, items, max_recs=10):
    prompt = f"""
    –£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö {category}:
    {items}

    –ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–∏ {max_recs} –ø–æ—Ö–æ–∂–∏—Ö {category}. 
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–π –≤—ã–≤–æ–¥ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º, –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å –∫—Ä–∞—Ç–∫–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–æ–π –æ –∫–∞–∂–¥–æ–º.
    """
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.8,
    )
    return response.choices[0].message.content

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üéØ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–æ—Ä")

# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
category = st.selectbox(
    "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ?",
    ["–ú—É–∑—ã–∫–∞", "–§–∏–ª—å–º—ã", "–°–µ—Ä–∏–∞–ª—ã", "–ò–≥—Ä—ã", "–ö–Ω–∏–≥–∏", "–ü–æ–¥–∫–∞—Å—Ç—ã", "–ê–Ω–∏–º–µ", "–ü—Ä–æ—á–µ–µ"]
)

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –ª—é–±–∏–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
items = st.text_area(f"–í—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –ª—é–±–∏–º—ã—Ö {category.lower()}:")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state
if "recs" not in st.session_state:
    st.session_state.recs = []

# –ö–Ω–æ–ø–∫–∞ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"):
    if items.strip():
        recs = get_recommendations(category, items, max_recs=15)
        st.session_state.recs = [recs]  # –∑–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    else:
        st.warning(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω {category.lower()}!")

# –ö–Ω–æ–ø–∫–∞ "–•–æ—á—É –µ—â—ë"
if st.button("–•–æ—á—É –µ—â—ë"):
    if items.strip():
        more_recs = get_recommendations(category, items, max_recs=15)
        st.session_state.recs.append(more_recs)  # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    else:
        st.warning(f"–°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ {category.lower()} –∏ –Ω–∞–∂–º–∏ '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å'")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
for i, block in enumerate(st.session_state.recs, 1):
    st.subheader(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ #{i}")
    st.write(block)
