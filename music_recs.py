import streamlit as st
import openai

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞ ---
openai.api_key = st.secrets["OPENAI_API_KEY"]

# --- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π ---
def get_recommendations(items_list, category="–ú—É–∑—ã–∫–∞", max_recs=20):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ ChatGPT –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    """
    prompt = f"""
–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –≤ {category}. 
–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
{items_list}

–î–∞–π {max_recs} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞ –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã–µ, –≤ –≤–∏–¥–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å –∫–æ—Ä–æ—Ç–∫–æ–π –ø–æ–¥–ø–∏—Å—å—é (–Ω–∞–∑–≤–∞–Ω–∏–µ + –æ–ø–∏—Å–∞–Ω–∏–µ).
–ù–µ –ø–æ–≤—Ç–æ—Ä—è–π —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
"""
    try:
        response = openai.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": prompt}]
        )
        text = response.choices[0].message.content
        # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –ø—É–Ω–∫—Ç—ã, –µ—Å–ª–∏ GPT –¥–∞–ª –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        recs = [line.strip("-‚Ä¢ ").strip() for line in text.splitlines() if line.strip()]
        return recs
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")
        return []

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ---
st.set_page_config(page_title="–£–º–Ω—ã–µ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", layout="wide")
st.title("üéØ –£–º–Ω—ã–µ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –ò–ò")
st.write("–ü–æ–ª—É—á–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –º—É–∑—ã–∫–µ, —Ñ–∏–ª—å–º–∞–º, –∏–≥—Ä–∞–º, —Å–µ—Ä–∏–∞–ª–∞–º –∏ –ª—é–±—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º!")

# --- –í–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
category = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", ["–ú—É–∑—ã–∫–∞", "–§–∏–ª—å–º—ã", "–°–µ—Ä–∏–∞–ª—ã", "–ò–≥—Ä—ã", "–ö–Ω–∏–≥–∏", "–ü—Ä–æ—á–µ–µ"])
items_input = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö —Ç—Ä–µ–∫–æ–≤, —Ñ–∏–ª—å–º–æ–≤ –∏–ª–∏ –∏–≥—Ä (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)")

max_recs = st.slider("–°–∫–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ä–∞–∑—É?", min_value=5, max_value=50, value=15)

if "history" not in st.session_state:
    st.session_state.history = []

if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏") and items_input.strip():
    with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."):
        recs = get_recommendations(items_input, category, max_recs)
        st.session_state.history = recs
        for r in recs:
            st.markdown(f"- {r}")

if st.button("–•–æ—á—É –µ—â—ë") and st.session_state.history:
    with st.spinner("–ò—â–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."):
        more_recs = get_recommendations(", ".join(st.session_st_
