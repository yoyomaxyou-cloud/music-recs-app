# music_recs_app.py

import streamlit as st
import openai
import time
from openai.error import RateLimitError

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞ ---
openai.api_key = st.secrets["OPENAI_API_KEY"]  # –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "YOUR_API_KEY" –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

# --- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ª–∏–º–∏—Ç–æ–≤ ---
def get_recommendations(user_items, categories, context, max_recs, max_retries=5, initial_wait=5):
    prompt = (
        f"–°–¥–µ–ª–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –º—É–∑—ã–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ: {user_items}, "
        f"–∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories}, –∫–æ–Ω—Ç–µ–∫—Å—Ç: {context}. "
        f"–ú–∞–∫—Å–∏–º—É–º {max_recs} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π."
    )
    
    wait_seconds = initial_wait
    for attempt in range(1, max_retries + 1):
        try:
            response = openai.chat.completions.create(
                model="gpt-4o-mini",
                messages=[{"role": "user", "content": prompt}],
                temperature=0.8
            )
            return response.choices[0].message["content"]
        except RateLimitError:
            if attempt == max_retries:
                return "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ OpenAI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            st.warning(f"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_retries}, –∂–¥—ë–º {wait_seconds} —Å–µ–∫—É–Ω–¥...")
            time.sleep(wait_seconds)
            wait_seconds *= 2  # —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ---
st.title("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üéµ")

user_items = st.text_input("–í–∞—à–∏ –ª—é–±–∏–º—ã–µ –ø–µ—Å–Ω–∏/–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
categories = st.text_input("–ñ–∞–Ω—Ä—ã –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
context = st.text_input("–ö–æ–Ω—Ç–µ–∫—Å—Ç/–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:")
max_recs = st.slider("–°–∫–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ö–æ—Ç–∏—Ç–µ?", 1, 10, 5)

if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"):
    if not user_items.strip():
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ø–µ—Å–Ω—é –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.")
    else:
        with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."):
            recs = get_recommendations(user_items, categories, context, max_recs)
        st.success("–ì–æ—Ç–æ–≤–æ!")
        st.text_area("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:", recs, height=200)
